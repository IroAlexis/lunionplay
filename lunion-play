#!/usr/bin/env bash

_where="$(dirname $(which $0))"
source "$_where"/customization.cfg 2> /dev/null
_return=$?


msg()
{
  echo -e "[+] info:: lunion-play: $1" >&2
}

error()
{
  echo -e "[-] error:: lunion-play: $1" >&2
}

is_futex2_supported()
{
  if [ -d /sys/kernel/futex2 ]; then
    if [ -f /sys/kernel/futex2/wait ] && [ -f /sys/kernel/futex2/waitv ] && [ -f /sys/kernel/futex2/wake ]; then
      msg "futex2 is supported"
      return 0
    fi
  fi

  msg "futex2 is not supported"
  return 1
}

is_winesync_supported()
{
  if [ -f /dev/winesync ]; then
    msg "fastsync is supported"
    return 0
  fi

  msg "fastsync is not supported"
  return 1
}

update_winepfx()
{
  if [ -z "$WINEDLLOVERRIDES" ]; then
    export WINEDLLOVERRIDES="mscoree,mshtml,winemenubuilder.exe=d"
  else
    OLD=$WINEDLLOVERRIDES
    WINEDLLOVERRIDES="mscoree,mshtml,winemenubuilder.exe=d"
  fi
  export WINEDEBUG=-all

  msg "Preparing to launch the game..."
  wineboot
  wineserver -w

  unset WINEDLLOVERRIDES
  unset WINEDEBUG

  WINEDLLOVERRIDES="$OLD"
  unset OLD
}

display_runtime_conf_options()
{
  echo "PATH=$PATH"
  if [ ! -z "$LD_LIBRARY_PATH" ]; then
    echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
  fi
  # if [ ! -z "$WINEESYNC" ]; then
    # echo "WINEESYNC=$WINEESYNC"
  # fi
  # if [ ! -z "$WINEFSYNC" ]; then
    # echo "WINEFSYNC=$WINEFSYNC"
    # if [ ! -z "$WINEFSYNC_FUTEX2" ]; then
      # echo "WINEFSYNC_FUTEX2=$WINEFSYNC_FUTEX2"
    # fi
  # fi
  # if [ ! -z "$WINE_DISABLE_FAST_SYNC" ]; then
    # echo "WINE_DISABLE_FAST_SYNC=$WINE_DISABLE_FAST_SYNC"
  # fi
  # echo "WINEPREFIX=$WINEPREFIX"
  # if [ ! -z "$WINEDEBUG" ]; then
    # echo "WINEDEBUG=$WINEDEBUG"
  # fi
  # if [ ! -z "$WINEDLLOVERRIDES" ]; then
    # echo "WINEDLLOVERRIDES=$WINEDLLOVERRIDES"
  # fi
  env | grep -e "WINE\|DXVK\|VKD3D"
}


# ========================
#  Arguments Verification
# ========================

if [[ "$1" =~ -h ]] || [[ "$1" =~ --help ]] || [ "$#" -ne 2 ]; then
  echo "usage: lunion-play gamename /path/to/game.exe"
  exit 1
fi

if [[ "$1" =~ ^\/$|(\/[a-zA-Z_0-9-]+)+$ ]]; then
  error "Do not pass a path: $1"
  exit 1
fi

if [[ ! "$2" =~ ^\/$|(\/[a-zA-Z_0-9 -]+)+.exe$ ]]; then
  error "Need to pass a Windows game (/path/to/game.exe)"
  exit 1
fi

if [ -f "$2" ]; then
  GAMEEXE="$(basename "$2")"
else
  error "The game executable does not exist"
  exit 1
fi


# ========================================
#  Lunion Play configuration Verification
# ========================================

if [ "$_return" = 1 ]; then
  msg "customization.cfg not found"
  if [ -z "$GAMEDIR" ]; then
    msg "Set the variable \`GAMEDIR=/home/frog\`"
    exit 1
  fi
  if [ -z "$CUSTOM_WINE" ]; then
    msg "Set the variable \`CUSTOM_WINE=/path/to/wine/bin\`"
    exit 1
  fi
fi
if [ ! -z "$GAMEDIR" ]; then
  GAMEDIR="$GAMEDIR/$1"
elif [ ! -z "$_games_path" ]; then
  GAMEDIR="$_games_path/$1"
else
  exit 1
fi


# =======================
#  Runtime Configuration
# =======================

if [ -z "$CUSTOM_WINE" ] && [ ! -z "$_custom_wine" ]; then
  CUSTOM_WINE="$_custom_wine"
fi
if [ ! -z "$CUSTOM_WINE" ]; then
  if [ -z "$PATH" ]; then
    PATH="$CUSTOM_WINE"
  else
    PATH="$CUSTOM_WINE:$PATH"
  fi

  if [ -z "$LD_LIBRARY_PATH" ]; then
    LD_LIBRARY_PATH="$CUSTOM_WINE/../lib64:$CUSTOM_WINE/../lib32:$CUSTOM_WINE/../lib"
  else
    LD_LIBRARY_PATH="$CUSTOM_WINE/../lib64:$CUSTOM_WINE/../lib32:$CUSTOM_WINE/../lib:$LD_LIBRARY_PATH"
  fi
fi
msg "$(wine --version)"
export WINEPREFIX="$GAMEDIR/pfx"

if [ -z "$LUNION_PLAY_SYNC" ]; then
  LUNION_PLAY_SYNC=futex2
fi

case "$LUNION_PLAY_SYNC" in
  esync)
    export WINEESYNC=1
    msg "Verify the presence of \"esync: up and running\" message"
    ;;

  fsync)
    export WINEFSYNC_FUTEX2=0
    export WINEFSYNC=1
    msg "Verify the presence of \"fsync: up and running\" message"
    ;;

  futex2)
    is_futex2_supported
    if [ $? ]; then
      export WINEFSYNC=1
    fi
    ;;

  fastsync)
    is_winesync_supported
    ;;

  disable)
    export WINEESYNC=0
    export WINEFSYNC=0
    export WINE_DISABLE_FAST_SYNC=1
    msg "wineserver will be used"
    ;;

  *)
    error "LUNION_PLAY_SYNC=$LUNION_PLAY_SYNC is a unknown value"
    exit 1
    ;;
esac

read -p "Press enter to continue. "

# Wine prefix update
update_winepfx

if [ -z "$WINEDLLOVERRIDES" ]; then
  export WINEDLLOVERRIDES="winemenubuilder.exe=d"
fi

if [ -z "$WINEDEBUG" ]; then
  export WINEDEBUG=-all

  if [[ "$LUNION_PLAY_LOG" =~ error ]]; then
    export WINEDEBUG=fixme-all
  elif [[ "$LUNION_PLAY_LOG" =~ all ]]; then
    unset WINEDEBUG
  fi
fi


# ====================
#  DXVK Configuration
# ====================

if [[ "$WINEDEBUG" =~ -all ]]; then
  export DXVK_LOG_LEVEL=none
fi
if [[ "$LUNION_HUD" =~ dxvk ]]; then
  export DXVK_HUD=1
fi


# ============================
#  VKD3D-Proton Configuration
# ============================

if [[ "$WINEDEBUG" =~ -all ]]; then
  export VKD3D_DEBUG=none
fi
export VKD3D_CONFIG=dxr,force_static_cbv

# Nvidia
export __GL_SHADER_DISK_CACHE=1
export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1
export __GL_SHADER_DISK_CACHE_PATH="$GAMEDIR/shaders"

# MangoHUD
export MANGOHUD_CONFIGFILE=$HOME/Games/mangohud.config


# =============
#  Game Launch
# =============

display_runtime_conf_options
msg "Starting..."

cd $(dirname "$(which "$2")")
wine "$GAMEEXE"

msg "Waiting all wine processes terminate..."
wineserver --wait

exit 0
